name: Build and push docker images

on:
  push:
    branches:
      - '*'
  schedule:
    - cron: '30 5 * * 3'

# Set env variables
env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}
  REPO_NAME: ${{secrets.REPO_NAME}}
  OCTAVE_VERSION: 8.3.0
  DEBIAN_VERSION: 12.1

jobs:
  build-and-push:
    runs-on: 'ubuntu-20.04'
    strategy:
      fail-fast: false
      matrix:
        image_version: ['debian', 'gui']
    steps:
      # https://github.com/actions/checkout
      - name: Checkout the commit triggering this job
        uses: actions/checkout@v4

      - name: Export Cache tokens using the Github runner shell
        uses: actions/github-script@v6
        with:
          script: |-
            core.exportVariable("ACTIONS_RUNTIME_TOKEN", process.env["ACTIONS_RUNTIME_TOKEN"])
            core.exportVariable("ACTIONS_RUNTIME_URL", process.env["ACTIONS_RUNTIME_URL"])

      # https://github.com/docker/login-action
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_TOKEN}}

      - name: Build image for ${{matrix.image_version}} tagging with git SHA and latest
        id: build_image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build \
          --build-arg "OCTAVE_VERSION=${OCTAVE_VERSION}" \
          --build-arg "DEBIAN_VERSION=${DEBIAN_VERSION}" \
          -f Dockerfile.${{matrix.image_version}} \
          -t ${DOCKER_USER}/${REPO_NAME}:${{matrix.image_version}}-${OCTAVE_VERSION}-${GITHUB_SHA} \
          -t ${DOCKER_USER}/${REPO_NAME}:${{matrix.image_version}}-${OCTAVE_VERSION}-latest \
          -t ${DOCKER_USER}/${REPO_NAME}:${{matrix.image_version}}-${OCTAVE_VERSION} \
          .

      - name: Push tagged images to docker
        if: ${{ (github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'schedule') && github.ref_protected }}
        run: |
          docker push --all-tags ${DOCKER_USER}/${REPO_NAME}
